#!/bin/bash
# ---------------------------------------------------------------- #
#                                                                  #
#  Example job submission script for Mat3ra.com platform           #
#                                                                  #
#  Shows resource manager directives for:                          #
#                                                                  #
#    1. the name of the job                (-N)                    #
#    2. the number of nodes to be used     (-l nodes=)             #
#    3. the number of processors per node  (-l ppn=)               #
#    4. the walltime in dd:hh:mm:ss format (-l walltime=)          #
#    5. queue                              (-q) D, OR, OF, SR, SF  #
#    6. merging standard output and error  (-j oe)                 #
#    7. email about job abort, begin, end  (-m abe)                #
#    8. email address to use               (-M)                    #
#                                                                  #
#  For more info visit https://docs.mat3ra.com/jobs-cli/overview/  #
# ---------------------------------------------------------------- #

#PBS -N LAMMPS-GPU
#PBS -j oe
#PBS -l nodes=1
#PBS -l ppn=8
#PBS -l walltime=00:01:00:00
#PBS -q GSF
##PBS -m abe
##PBS -M info@mat3ra.com
#
## Uncomment the line below and put a desired project name, e.g.:
## "seminar-default" or "john-project"
## NOTE: this is required when using organizational accounts.
## more at https://docs.mat3ra.com/jobs-cli/batch-scripts/directives/.
## The job will be charged to the corresponding project.
## When commented out, the default project for user is assumed.
##PBS -A <PROJECT_NAME_IN_ACCOUNTING_SYSTEM>

# load module
module load lammps/2024.08.29.2-i-2023.1-cuda-12.4

# go to the job working directory
cd $PBS_O_WORKDIR
# `-sf gpu` flag selects number of GPUs automatically. It also appends `/gpu` to
# all supported pair styles. To set number of GPUs explicitly, use `-pk gpu N`.
# GPU acceleration can be manually set for a pair style in the input file:
# - pair_style	lj/cut 2.5
# + pair_style	lj/cut/gpu 2.5
# logs are written to log.lammps, it can be specified with `-l output.log`
mpirun -np $PBS_NP lmp -sf gpu -i in.min
